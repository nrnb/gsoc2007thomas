Index: trunk/src/wikipathways-swt/org/pathvisio/wikipathways/swt/WebstartMain.java
===================================================================
--- trunk/src/wikipathways-swt/org/pathvisio/wikipathways/swt/WebstartMain.java	(revision 1120)
+++ trunk/src/wikipathways-swt/org/pathvisio/wikipathways/swt/WebstartMain.java	(revision 1121)
@@ -147,7 +147,7 @@
 		main.createAndShowGui();
 	}
 	
-	private URL getDocumentBase() {
+	static URL getDocumentBase() {
 		try {
 			BasicService bs = (BasicService)ServiceManager.lookup("javax.jnlp.BasicService");
 			return bs.getCodeBase();
Index: trunk/src/wikipathways-swt/org/pathvisio/wikipathways/swt/MainWindowWikipathways.java
===================================================================
--- trunk/src/wikipathways-swt/org/pathvisio/wikipathways/swt/MainWindowWikipathways.java	(revision 1120)
+++ trunk/src/wikipathways-swt/org/pathvisio/wikipathways/swt/MainWindowWikipathways.java	(revision 1121)
@@ -34,7 +34,8 @@
 					boolean doit = MessageDialog.openQuestion(SwtEngine.getCurrent().getWindow().getShell(), "Save pathway?", 
 							"Do you want to save the changes to " + wiki.getPwName() + " on " + Globals.SERVER_NAME + "?");
 					if(doit) {
-						wiki.saveUI();
+						boolean saved = wiki.saveUI();
+						wiki.getUserInterfaceHandler().showDocument(WebstartMain.getDocumentBase(), "_this");
 					}
 					
 				}
Index: trunk/src/wikipathways/org/pathvisio/wikipathways/WikiPathways.java
===================================================================
--- trunk/src/wikipathways/org/pathvisio/wikipathways/WikiPathways.java	(revision 1120)
+++ trunk/src/wikipathways/org/pathvisio/wikipathways/WikiPathways.java	(revision 1121)
@@ -54,10 +54,10 @@
 import org.pathvisio.debug.Logger;
 import org.pathvisio.gui.swing.MainPanel;
 import org.pathvisio.gui.wikipathways.Actions;
-import org.pathvisio.gui.wikipathways.AppletMain;
 import org.pathvisio.model.ConverterException;
 import org.pathvisio.model.Organism;
 import org.pathvisio.model.Pathway;
+import org.pathvisio.preferences.GlobalPreference;
 import org.pathvisio.util.ProgressKeeper;
 import org.pathvisio.util.RunnableWithProgress;
 import org.pathvisio.view.VPathway;
@@ -210,6 +210,10 @@
 		return localFile;
 	}
 		
+	public UserInterfaceHandler getUserInterfaceHandler() {
+		return uiHandler;
+	}
+	
 	public boolean saveUI() {
 		VPathway vPathway = Engine.getCurrent().getActiveVPathway();
 		if(isReadOnly()) {
@@ -231,7 +235,8 @@
 							return true;
 						} catch (Exception e) {
 							Logger.log.error("Unable to save pathway", e);
-							uiHandler.showError("Unable to save pathway", e.getClass() + ": " + e.getMessage());
+							uiHandler.showError("Unable to save pathway", e.getClass() + 
+									"\n See error log (" + GlobalPreference.FILE_LOG.getValue() + ") for details");
 						}
 						return false;
 					}
