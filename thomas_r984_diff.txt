Index: trunk/src/core/org/pathvisio/view/VPathway.java
===================================================================
--- trunk/src/core/org/pathvisio/view/VPathway.java	(revision 983)
+++ trunk/src/core/org/pathvisio/view/VPathway.java	(revision 984)
@@ -1095,34 +1095,35 @@
 		//Use registerKeyboardActions
 	}
 	
+	public static final KeyStroke KEY_SELECT_DATA_NODES = KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D,
+			java.awt.Event.CTRL_MASK);
+	public static final KeyStroke KEY_GROUP = KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G,
+			java.awt.Event.CTRL_MASK);
+	public static final KeyStroke KEY_SELECT_ALL = KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A,
+			java.awt.Event.CTRL_MASK);
+	public static final KeyStroke KEY_DELETE = KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0);
+	//TODO: remove Swing dependency, create enum with keymappings and implement mappings to SWT and Swing
 	private void registerKeyboardActions() {
 		
 		if(parent != null) {
-			parent.registerKeyboardAction(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D,
-					java.awt.Event.CTRL_MASK),
-					new AbstractAction() {
+			parent.registerKeyboardAction(KEY_SELECT_DATA_NODES, new AbstractAction() {
 				public void actionPerformed(ActionEvent e) {
 					selectGeneProducts();
 					redraw();
 				}
-			}, VPathwayWrapper.WHEN_WINDOW_FOCUSED);
-			parent.registerKeyboardAction(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G,
-					java.awt.Event.CTRL_MASK),
-					new AbstractAction() {
+			});
+			parent.registerKeyboardAction(KEY_GROUP, new AbstractAction() {
 				public void actionPerformed(ActionEvent e) {
 					createGroup();
 				}
-			}, VPathwayWrapper.WHEN_WINDOW_FOCUSED);
-			parent.registerKeyboardAction(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A,
-					java.awt.Event.CTRL_MASK),
-					new AbstractAction() {
+			});
+			parent.registerKeyboardAction(KEY_SELECT_ALL, new AbstractAction() {
 				public void actionPerformed(ActionEvent e) {
 					selectAll();
 					redraw();
 				}
-			}, VPathwayWrapper.WHEN_WINDOW_FOCUSED);
-			parent.registerKeyboardAction(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0),
-					new AbstractAction() {
+			});
+			parent.registerKeyboardAction(KEY_DELETE,new AbstractAction() {
 				public void actionPerformed(ActionEvent e) {
 					ArrayList<VPathwayElement> toRemove = new ArrayList<VPathwayElement>();
 					for(VPathwayElement o : drawingObjects)
@@ -1132,7 +1133,7 @@
 					}
 					removeDrawingObjects(toRemove);	
 				}
-			}, VPathwayWrapper.WHEN_WINDOW_FOCUSED);
+			});
 		}
                 
 	}
Index: trunk/src/core/org/pathvisio/view/VPathwayWrapper.java
===================================================================
--- trunk/src/core/org/pathvisio/view/VPathwayWrapper.java	(revision 983)
+++ trunk/src/core/org/pathvisio/view/VPathwayWrapper.java	(revision 984)
@@ -33,7 +33,5 @@
 	
 	public VPathway createVPathway();
 	
-	public static final int WHEN_FOCUSED = 0;
-	public static final int WHEN_WINDOW_FOCUSED = 1;
-	public void registerKeyboardAction(KeyStroke k, Action a, int when);
+	public void registerKeyboardAction(KeyStroke k, Action a);
 }
Index: trunk/src/core/org/pathvisio/view/swing/VPathwaySwing.java
===================================================================
--- trunk/src/core/org/pathvisio/view/swing/VPathwaySwing.java	(revision 983)
+++ trunk/src/core/org/pathvisio/view/swing/VPathwaySwing.java	(revision 984)
@@ -28,7 +28,6 @@
 import java.awt.event.MouseMotionListener;
 
 import javax.swing.Action;
-import javax.swing.JComponent;
 import javax.swing.JPanel;
 import javax.swing.JScrollPane;
 import javax.swing.KeyStroke;
@@ -144,14 +143,8 @@
 		child.mouseMove(new SwingMouseEvent(e));
 	}
 
-	public void registerKeyboardAction(KeyStroke k, Action a, int when) {
-		switch(when) {
-		case VPathwayWrapper.WHEN_FOCUSED:
-			when = JComponent.WHEN_FOCUSED; break;
-		case WHEN_WINDOW_FOCUSED:
-			when = WHEN_IN_FOCUSED_WINDOW; break;
-		}
-		super.registerKeyboardAction(a, k, when);	
+	public void registerKeyboardAction(KeyStroke k, Action a) {
+		super.registerKeyboardAction(a, k, WHEN_IN_FOCUSED_WINDOW);
 	}
 	
 	public VPathway createVPathway() {
Index: trunk/src/core/org/pathvisio/view/Label.java
===================================================================
--- trunk/src/core/org/pathvisio/view/Label.java	(revision 983)
+++ trunk/src/core/org/pathvisio/view/Label.java	(revision 984)
@@ -22,6 +22,7 @@
 import java.awt.Rectangle;
 import java.awt.Shape;
 import java.awt.font.TextAttribute;
+import java.awt.font.TextLayout;
 import java.awt.geom.Rectangle2D;
 import java.text.AttributedString;
 
@@ -123,14 +124,18 @@
 	protected Rectangle2D getTextBounds(Graphics2D g) {
 		Rectangle2D tb = null;
 		if(g != null) {
-			 tb = g.getFontMetrics().getStringBounds(getVAttributedString().getIterator(), 0, gdata.getTextLabel().length(), g);
-			 tb.setRect(getVLeftDouble(), getVTopDouble(), tb.getWidth(), tb.getHeight() + g.getFontMetrics().getDescent());
+			 tb = g.getFontMetrics(getVFont()).getStringBounds(getLabelText(), g);
+			 tb.setRect(getVLeftDouble() + tb.getX(), getVTopDouble() + tb.getY(), tb.getWidth(), tb.getHeight());
 		} else { //No graphics context, we can only guess...
-			tb = new Rectangle2D.Double(getVLeftDouble(), getVTopDouble(), getVWidthDouble(), getVHeightDouble()); 
+			tb = getBoxBounds();
 		}
 		return tb;
 	}
 	
+	protected Rectangle2D getBoxBounds() {
+		return new Rectangle2D.Double(getVLeftDouble(), getVTopDouble(), getVWidthDouble(), getVHeightDouble());
+	}
+	
 	protected Dimension computeTextSize(Graphics2D g) {
 		Rectangle2D tb = getTextBounds(g);
 		return new Dimension((int)tb.getWidth(), (int)tb.getHeight());
@@ -184,7 +189,7 @@
 		Font f = getVFont();
 		g.setFont(f);
 		
-		Rectangle area = getVOutline().getBounds();
+		Rectangle area = getBoxBounds().getBounds();
 		
 		String label = gdata.getTextLabel();
 		AttributedString ats = getVAttributedString();
@@ -209,7 +214,9 @@
 	 */
 	protected Shape getVOutline()
 	{
+		Rectangle2D bb = getBoxBounds();
 		Rectangle2D tb = getTextBounds(g2d);
+		tb.add(bb);
 		return tb;
 	}
 	
Index: trunk/src/swt/org/pathvisio/view/swt/VPathwaySwtAwt.java
===================================================================
--- trunk/src/swt/org/pathvisio/view/swt/VPathwaySwtAwt.java	(revision 983)
+++ trunk/src/swt/org/pathvisio/view/swt/VPathwaySwtAwt.java	(revision 984)
@@ -16,11 +16,14 @@
 //
 package org.pathvisio.view.swt;
 
-import java.awt.Color;
+import java.awt.event.ActionEvent;
 import java.awt.event.KeyEvent;
 import java.awt.event.MouseEvent;
 
+import javax.swing.AbstractAction;
+import javax.swing.Action;
 import javax.swing.JScrollPane;
+import javax.swing.KeyStroke;
 
 import org.eclipse.swt.widgets.Display;
 import org.pathvisio.view.swing.VPathwaySwing;
@@ -41,6 +44,7 @@
 	}
 
 	public void mouseEntered(final MouseEvent e) {
+		requestFocus();
 		display.syncExec(new Runnable() {
 			public void run() {
 				VPathwaySwtAwt.super.mouseEntered(e);
@@ -111,4 +115,16 @@
 			}
 		});
 	}
+	
+	public void registerKeyboardAction(KeyStroke k, final Action a) {
+		super.registerKeyboardAction(k, new AbstractAction() {
+			public void actionPerformed(final ActionEvent e) {
+				display.syncExec(new Runnable() {
+					public void run() {
+						a.actionPerformed(e);
+					}
+				});
+			}
+		});
+	}
 }
\ No newline at end of file
