Index: trunk/src/core/org/pathvisio/view/VPathwayElement.java
===================================================================
--- trunk/src/core/org/pathvisio/view/VPathwayElement.java	(revision 969)
+++ trunk/src/core/org/pathvisio/view/VPathwayElement.java	(revision 970)
@@ -16,14 +16,18 @@
 //
 package org.pathvisio.view;
 
+import java.awt.BasicStroke;
 import java.awt.Graphics2D;
 import java.awt.Rectangle;
 import java.awt.Shape;
+import java.awt.Stroke;
 import java.awt.geom.Point2D;
 import java.awt.geom.Rectangle2D;
 
 public abstract class VPathwayElement implements Comparable<VPathwayElement>
 {	
+	protected Stroke defaultStroke = new BasicStroke();
+	
 	protected VPathway canvas;
 	
 	VPathwayElement(VPathway canvas) {
@@ -42,6 +46,9 @@
 		
 		Graphics2D g = (Graphics2D)g2d.create();
 				
+		//Prevent element from drawing outside its bounds
+		g.setClip(getVBounds());
+		g.setStroke(defaultStroke);
 		//Perform the drawing
 		doDraw(g);
 		
Index: trunk/src/core/org/pathvisio/view/Label.java
===================================================================
--- trunk/src/core/org/pathvisio/view/Label.java	(revision 969)
+++ trunk/src/core/org/pathvisio/view/Label.java	(revision 970)
@@ -120,13 +120,18 @@
 //		textComposite.pack();
 //	}
 	
-	Dimension computeTextSize(Graphics2D g) {
+	protected Rectangle2D getTextBounds(Graphics2D g) {
 		Rectangle2D tb = null;
 		if(g != null) {
 			 tb = g.getFontMetrics().getStringBounds(getVAttributedString().getIterator(), 0, gdata.getTextLabel().length(), g);
 		} else { //No graphics context, we can only guess...
-			tb = new Rectangle2D.Double(0, 0, getVWidthDouble(), getVHeightDouble()); 
+			tb = new Rectangle2D.Double(getVLeftDouble(), getVTopDouble(), getVWidthDouble(), getVHeightDouble()); 
 		}
+		return tb;
+	}
+	
+	protected Dimension computeTextSize(Graphics2D g) {
+		Rectangle2D tb = getTextBounds(g);
 		return new Dimension((int)tb.getWidth(), (int)tb.getHeight());
 	}
 	
@@ -204,12 +209,8 @@
 	protected Shape getVOutline()
 	{
 		Rectangle bounds = super.getVOutline().getBounds();
-		Dimension mq = computeTextSize(g2d);
-		double vqx = mq.getWidth();
-		double vqy = mq.getHeight();
-		
-		LinAlg.Point c = getVCenter();
-		bounds.add(new Rectangle2D.Double(c.x - vqx / 2, c.y - vqy / 2, vqx, vqy));
+		Rectangle2D tb = getTextBounds(g2d);
+		bounds.add(tb);
 
 		return bounds;
 	}
Index: trunk/src/core/org/pathvisio/view/GraphicsShape.java
===================================================================
--- trunk/src/core/org/pathvisio/view/GraphicsShape.java	(revision 969)
+++ trunk/src/core/org/pathvisio/view/GraphicsShape.java	(revision 970)
@@ -458,6 +458,10 @@
 	 */
 	protected Shape getVOutline()
 	{
+		return defaultStroke.createStrokedShape(getFillShape());
+	}
+	
+	private Shape getFillShape() {
 		int[] x = new int[4];
 		int[] y = new int[4];
 		
@@ -473,7 +477,7 @@
 		Polygon pol = new Polygon(x, y, 4);
 		return pol;
 	}
-			
+	
 	public void gmmlObjectModified(PathwayEvent e) {		
 		markDirty(); // mark everything dirty
 		setHandleLocation();
Index: trunk/src/core/org/pathvisio/view/Line.java
===================================================================
--- trunk/src/core/org/pathvisio/view/Line.java	(revision 969)
+++ trunk/src/core/org/pathvisio/view/Line.java	(revision 970)
@@ -23,6 +23,7 @@
 import java.awt.Shape;
 import java.awt.geom.AffineTransform;
 import java.awt.geom.Arc2D;
+import java.awt.geom.Ellipse2D;
 import java.awt.geom.Line2D;
 import java.awt.geom.Point2D;
 import java.awt.geom.Rectangle2D;
@@ -153,6 +154,10 @@
 	}
 	
 	private void paintArrowHead(Graphics2D g2d, double xs, double ys, double xe, double ye, double w, double h) {			
+		g2d.fill(getArrowHead(g2d, xs, ys, xe, ye, w, h));
+	}
+	
+	private Shape getArrowHead(Graphics2D g2d, double xs, double ys, double xe, double ye, double w, double h) {
 		double angle = getAngle(xs, ys, xe, ye);
 		int[] xpoints = new int[] { (int)xe, (int)(xe - w), (int)(xe - w) };
 		int[] ypoints = new int[] { (int)ye, (int)(ye - h), (int)(ye + h) };
@@ -160,24 +165,30 @@
 		Polygon arrow = new Polygon(xpoints, ypoints, 3);
 		AffineTransform f = new AffineTransform();
 		f.rotate(-angle, xe, ye);
-		Shape rotArrow = f.createTransformedShape(arrow);
-		g2d.fill(rotArrow);
+		return f.createTransformedShape(arrow);
 	}
 	
 	private void paintTBar(Graphics2D g2d, double xs, double ys, double xe, double ye, double w, double h) {
+		g2d.fill(getTBar(g2d, xs, ys, xe, ye, w, h));
+	}
+	
+	private Shape getTBar(Graphics2D g2d, double xs, double ys, double xe, double ye, double w, double h) {
 		double angle = getAngle(xs, ys, xe, ye);
 	
 		Rectangle2D bar = new Rectangle2D.Double(xe - w, ye - h/2, w, h);
 		AffineTransform f = new AffineTransform();
 		f.rotate(-angle, xe, ye);
-		Shape rotBar = f.createTransformedShape(bar);
-		g2d.fill(rotBar);
+		return f.createTransformedShape(bar);
 	}
 	
 	private void paintLRound(Graphics2D g2d, double xe, double ye, double d) {	
-		g2d.fillOval ((int)(xe - d/2), (int)(ye - d/2), (int)d, (int)d);
+		g2d.fill(getLRound(g2d, xe, ye, d));
 	}
 	
+	private Shape getLRound(Graphics2D g2d, double xe, double ye, double d) {	
+		return new Ellipse2D.Double(xe - d/2, ye - d/2, d, d);
+	}
+	
 	private void paintRRound(Graphics2D g2d, double xs, double ys, double xe, double ye, double d) {
 		double angle = getAngle(xs, ys, xe, ye);
 		AffineTransform f = new AffineTransform();
@@ -245,6 +256,8 @@
 		g2d.draw(rotBar);
 	}
 	
+//	TODO: create the real outline, by creating a shape that
+//  represents the whole line...use getArrow() etc.
 	protected Shape getVOutline()
 	{
 		//TODO: bigger than necessary, just to include the arrowhead / shape at the end
Index: trunk/src/core/org/pathvisio/view/Handle.java
===================================================================
--- trunk/src/core/org/pathvisio/view/Handle.java	(revision 969)
+++ trunk/src/core/org/pathvisio/view/Handle.java	(revision 970)
@@ -16,10 +16,12 @@
 //
 package org.pathvisio.view;
 
+import java.awt.BasicStroke;
 import java.awt.Color;
 import java.awt.Graphics2D;
 import java.awt.Rectangle;
 import java.awt.Shape;
+import java.awt.Stroke;
 import java.awt.geom.Ellipse2D;
 import java.awt.geom.Rectangle2D;
 
@@ -155,7 +157,7 @@
 	{
 		if(!isVisible) return;
 		
-		Shape outline = getVOutline();
+		Shape fillShape = getFillShape();
 		
 		if(direction == DIRECTION_ROT) {
 			g.setColor(Color.GREEN);
@@ -163,11 +165,11 @@
 			g.setColor(Color.YELLOW);
 		}
 		
-		g.fill(outline);
+		g.fill(fillShape);
 		
 		g.setColor(Color.BLACK);
 		
-		g.draw(outline);		
+		g.draw(fillShape);		
 	}
 		
 	/**
@@ -209,6 +211,10 @@
 	}
 			
 	public Shape getVOutline() {
+		return defaultStroke.createStrokedShape(getFillShape());
+	}
+	
+	private Shape getFillShape() {
 		Shape s = null;
 		switch(direction) {
 		case DIRECTION_ROT:
@@ -222,7 +228,7 @@
 		}
 		return s;
 	}
-		
+	
 	public String toString() { 
 		return 	"Handle with parent: " + parent.toString() +
 		" and direction " + direction; 
Index: trunk/src/core/org/pathvisio/view/SelectionBox.java
===================================================================
--- trunk/src/core/org/pathvisio/view/SelectionBox.java	(revision 969)
+++ trunk/src/core/org/pathvisio/view/SelectionBox.java	(revision 970)
@@ -385,10 +385,11 @@
 	public void doDraw(Graphics2D g)
 	{
 		if(isVisible) {
-			g.setStroke(new BasicStroke(1, 
+			int sw = 1;
+			g.setStroke(new BasicStroke(sw, 
 					BasicStroke.CAP_SQUARE, BasicStroke.JOIN_MITER, 
 					1, new float[] {1, 2}, 0));
-			g.drawRect(getVLeft(), getVTop(), getVWidth(), getVHeight());
+			g.drawRect(getVLeft(), getVTop(), getVWidth() - sw, getVHeight() - sw);
 		}
 	}
 		
Index: trunk/build.xml
===================================================================
--- trunk/build.xml	(revision 969)
+++ trunk/build.xml	(revision 970)
@@ -122,14 +122,14 @@
     </target>
 
 	<target name="run-v1" depends="compile-v1">
-		<java classname="gmmlVision.GmmlVisionMain" fork="true">
+		<java classname="org.pathvisio.gui.swt.GuiMain" fork="true">
 			<classpath refid="project.v1.class.path"/>
 			<jvmarg value='-Djava.library.path=lib/swt-linux-lib'/>
 		</java>
 	</target>
 
 	<target name="run-v2" depends="compile-v2">
-		<java classname="gmmlVision.GmmlVisionMain" fork="true">
+		<java classname="org.pathvisio.gui.swt.GuiMain" fork="true">
 			<classpath refid="project.v2.class.path"/>
 			<jvmarg value='-Djava.library.path=lib/swt-linux-lib'/>
 		</java>
